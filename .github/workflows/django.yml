name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build: #first job - testing

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Django-based tests
      run: |
        python crm1_v14_registration_login/manage.py test crm1_v14_registration_login/tests/
    - name: Export ENV Var
      run: |
        export CODACY_PROJECT_TOKEN=${{secrets.CODACY_PROJECT_TOKEN}}
    - name: Upload to Codacy
      run: |
        /bin/bash crm1_v14_registration_login/codacy.sh
  
  
  security: #second job - snyk scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
 
  
  
  
  deploy: #third job - deploy
    name: Deploy to Heroku
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps: 
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: bui-projekt #Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}
      - name: Deployed successfully
        run: |
          echo Deployed!!
   
